-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dft_dft_Pipeline_VITIS_LOOP_28_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    trunc_ln1 : IN STD_LOGIC_VECTOR (7 downto 0);
    temp_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_11_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_12_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_13_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_14_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_15_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_16_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_17_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_18_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_19_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_20_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_21_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_22_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_23_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_24_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_25_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_26_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_27_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_28_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_29_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_30_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_31_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_32_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_33_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_34_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_35_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_36_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_37_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_38_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_39_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_40_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_41_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_42_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_43_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_44_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_45_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_46_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_47_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_48_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_49_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_50_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_51_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_52_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_53_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_54_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_55_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_56_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_57_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_58_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_59_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_60_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_61_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_62_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_63_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_64_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_65_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_66_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_67_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_68_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_69_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_70_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_71_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_72_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_73_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_74_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_75_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_76_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_77_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_78_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_79_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_80_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_81_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_82_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_83_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_84_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_85_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_86_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_87_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_88_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_89_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_90_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_91_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_92_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_93_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_94_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_95_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_96_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_97_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_98_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_99_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_100_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_101_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_102_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_103_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_104_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_105_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_106_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_107_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_108_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_109_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_110_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_111_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_112_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_113_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_114_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_115_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_116_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_117_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_118_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_119_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_120_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_121_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_122_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_123_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_124_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_125_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_126_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_127_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_128_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_129_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_130_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_131_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_132_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_133_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_134_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_135_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_136_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_137_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_138_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_139_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_140_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_141_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_142_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_143_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_144_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_145_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_146_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_147_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_148_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_149_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_150_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_151_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_152_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_153_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_154_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_155_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_156_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_157_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_158_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_159_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_160_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_161_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_162_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_163_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_164_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_165_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_166_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_167_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_168_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_169_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_170_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_171_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_172_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_173_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_174_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_175_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_176_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_177_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_178_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_179_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_180_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_181_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_182_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_183_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_184_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_185_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_186_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_187_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_188_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_189_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_190_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_191_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_192_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_193_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_194_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_195_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_196_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_197_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_198_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_199_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_200_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_201_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_202_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_203_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_204_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_205_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_206_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_207_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_208_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_209_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_210_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_211_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_212_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_213_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_214_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_215_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_216_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_217_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_218_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_219_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_220_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_221_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_222_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_223_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_224_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_225_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_226_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_227_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_228_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_229_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_230_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_231_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_232_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_233_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_234_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_235_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_236_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_237_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_238_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_239_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_240_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_241_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_242_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_243_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_244_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_245_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_246_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_247_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_248_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_249_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_250_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_251_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_252_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_253_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_254_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_255_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_i_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_i_out_ap_vld : OUT STD_LOGIC;
    sum_r_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_r_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of dft_dft_Pipeline_VITIS_LOOP_28_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal icmp_ln28_reg_2804 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal cos_coefficients_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cos_coefficients_table_ce0 : STD_LOGIC;
    signal cos_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_coefficients_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_ce0 : STD_LOGIC;
    signal sin_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln28_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_2804_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_2214_p258 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2808 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_coefficients_table_load_reg_2823 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_coefficients_table_load_reg_2828 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2833 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_reg_2843 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln32_fu_2732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal index_fu_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln31_fu_2208_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_index_load : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_r_fu_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_r_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal sum_i_fu_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_i_load : STD_LOGIC_VECTOR (31 downto 0);
    signal n_fu_572 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln28_fu_2199_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_n_1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_2158_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dft_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_mux_2569_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        din129_WIDTH : INTEGER;
        din130_WIDTH : INTEGER;
        din131_WIDTH : INTEGER;
        din132_WIDTH : INTEGER;
        din133_WIDTH : INTEGER;
        din134_WIDTH : INTEGER;
        din135_WIDTH : INTEGER;
        din136_WIDTH : INTEGER;
        din137_WIDTH : INTEGER;
        din138_WIDTH : INTEGER;
        din139_WIDTH : INTEGER;
        din140_WIDTH : INTEGER;
        din141_WIDTH : INTEGER;
        din142_WIDTH : INTEGER;
        din143_WIDTH : INTEGER;
        din144_WIDTH : INTEGER;
        din145_WIDTH : INTEGER;
        din146_WIDTH : INTEGER;
        din147_WIDTH : INTEGER;
        din148_WIDTH : INTEGER;
        din149_WIDTH : INTEGER;
        din150_WIDTH : INTEGER;
        din151_WIDTH : INTEGER;
        din152_WIDTH : INTEGER;
        din153_WIDTH : INTEGER;
        din154_WIDTH : INTEGER;
        din155_WIDTH : INTEGER;
        din156_WIDTH : INTEGER;
        din157_WIDTH : INTEGER;
        din158_WIDTH : INTEGER;
        din159_WIDTH : INTEGER;
        din160_WIDTH : INTEGER;
        din161_WIDTH : INTEGER;
        din162_WIDTH : INTEGER;
        din163_WIDTH : INTEGER;
        din164_WIDTH : INTEGER;
        din165_WIDTH : INTEGER;
        din166_WIDTH : INTEGER;
        din167_WIDTH : INTEGER;
        din168_WIDTH : INTEGER;
        din169_WIDTH : INTEGER;
        din170_WIDTH : INTEGER;
        din171_WIDTH : INTEGER;
        din172_WIDTH : INTEGER;
        din173_WIDTH : INTEGER;
        din174_WIDTH : INTEGER;
        din175_WIDTH : INTEGER;
        din176_WIDTH : INTEGER;
        din177_WIDTH : INTEGER;
        din178_WIDTH : INTEGER;
        din179_WIDTH : INTEGER;
        din180_WIDTH : INTEGER;
        din181_WIDTH : INTEGER;
        din182_WIDTH : INTEGER;
        din183_WIDTH : INTEGER;
        din184_WIDTH : INTEGER;
        din185_WIDTH : INTEGER;
        din186_WIDTH : INTEGER;
        din187_WIDTH : INTEGER;
        din188_WIDTH : INTEGER;
        din189_WIDTH : INTEGER;
        din190_WIDTH : INTEGER;
        din191_WIDTH : INTEGER;
        din192_WIDTH : INTEGER;
        din193_WIDTH : INTEGER;
        din194_WIDTH : INTEGER;
        din195_WIDTH : INTEGER;
        din196_WIDTH : INTEGER;
        din197_WIDTH : INTEGER;
        din198_WIDTH : INTEGER;
        din199_WIDTH : INTEGER;
        din200_WIDTH : INTEGER;
        din201_WIDTH : INTEGER;
        din202_WIDTH : INTEGER;
        din203_WIDTH : INTEGER;
        din204_WIDTH : INTEGER;
        din205_WIDTH : INTEGER;
        din206_WIDTH : INTEGER;
        din207_WIDTH : INTEGER;
        din208_WIDTH : INTEGER;
        din209_WIDTH : INTEGER;
        din210_WIDTH : INTEGER;
        din211_WIDTH : INTEGER;
        din212_WIDTH : INTEGER;
        din213_WIDTH : INTEGER;
        din214_WIDTH : INTEGER;
        din215_WIDTH : INTEGER;
        din216_WIDTH : INTEGER;
        din217_WIDTH : INTEGER;
        din218_WIDTH : INTEGER;
        din219_WIDTH : INTEGER;
        din220_WIDTH : INTEGER;
        din221_WIDTH : INTEGER;
        din222_WIDTH : INTEGER;
        din223_WIDTH : INTEGER;
        din224_WIDTH : INTEGER;
        din225_WIDTH : INTEGER;
        din226_WIDTH : INTEGER;
        din227_WIDTH : INTEGER;
        din228_WIDTH : INTEGER;
        din229_WIDTH : INTEGER;
        din230_WIDTH : INTEGER;
        din231_WIDTH : INTEGER;
        din232_WIDTH : INTEGER;
        din233_WIDTH : INTEGER;
        din234_WIDTH : INTEGER;
        din235_WIDTH : INTEGER;
        din236_WIDTH : INTEGER;
        din237_WIDTH : INTEGER;
        din238_WIDTH : INTEGER;
        din239_WIDTH : INTEGER;
        din240_WIDTH : INTEGER;
        din241_WIDTH : INTEGER;
        din242_WIDTH : INTEGER;
        din243_WIDTH : INTEGER;
        din244_WIDTH : INTEGER;
        din245_WIDTH : INTEGER;
        din246_WIDTH : INTEGER;
        din247_WIDTH : INTEGER;
        din248_WIDTH : INTEGER;
        din249_WIDTH : INTEGER;
        din250_WIDTH : INTEGER;
        din251_WIDTH : INTEGER;
        din252_WIDTH : INTEGER;
        din253_WIDTH : INTEGER;
        din254_WIDTH : INTEGER;
        din255_WIDTH : INTEGER;
        din256_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (31 downto 0);
        din121 : IN STD_LOGIC_VECTOR (31 downto 0);
        din122 : IN STD_LOGIC_VECTOR (31 downto 0);
        din123 : IN STD_LOGIC_VECTOR (31 downto 0);
        din124 : IN STD_LOGIC_VECTOR (31 downto 0);
        din125 : IN STD_LOGIC_VECTOR (31 downto 0);
        din126 : IN STD_LOGIC_VECTOR (31 downto 0);
        din127 : IN STD_LOGIC_VECTOR (31 downto 0);
        din128 : IN STD_LOGIC_VECTOR (31 downto 0);
        din129 : IN STD_LOGIC_VECTOR (31 downto 0);
        din130 : IN STD_LOGIC_VECTOR (31 downto 0);
        din131 : IN STD_LOGIC_VECTOR (31 downto 0);
        din132 : IN STD_LOGIC_VECTOR (31 downto 0);
        din133 : IN STD_LOGIC_VECTOR (31 downto 0);
        din134 : IN STD_LOGIC_VECTOR (31 downto 0);
        din135 : IN STD_LOGIC_VECTOR (31 downto 0);
        din136 : IN STD_LOGIC_VECTOR (31 downto 0);
        din137 : IN STD_LOGIC_VECTOR (31 downto 0);
        din138 : IN STD_LOGIC_VECTOR (31 downto 0);
        din139 : IN STD_LOGIC_VECTOR (31 downto 0);
        din140 : IN STD_LOGIC_VECTOR (31 downto 0);
        din141 : IN STD_LOGIC_VECTOR (31 downto 0);
        din142 : IN STD_LOGIC_VECTOR (31 downto 0);
        din143 : IN STD_LOGIC_VECTOR (31 downto 0);
        din144 : IN STD_LOGIC_VECTOR (31 downto 0);
        din145 : IN STD_LOGIC_VECTOR (31 downto 0);
        din146 : IN STD_LOGIC_VECTOR (31 downto 0);
        din147 : IN STD_LOGIC_VECTOR (31 downto 0);
        din148 : IN STD_LOGIC_VECTOR (31 downto 0);
        din149 : IN STD_LOGIC_VECTOR (31 downto 0);
        din150 : IN STD_LOGIC_VECTOR (31 downto 0);
        din151 : IN STD_LOGIC_VECTOR (31 downto 0);
        din152 : IN STD_LOGIC_VECTOR (31 downto 0);
        din153 : IN STD_LOGIC_VECTOR (31 downto 0);
        din154 : IN STD_LOGIC_VECTOR (31 downto 0);
        din155 : IN STD_LOGIC_VECTOR (31 downto 0);
        din156 : IN STD_LOGIC_VECTOR (31 downto 0);
        din157 : IN STD_LOGIC_VECTOR (31 downto 0);
        din158 : IN STD_LOGIC_VECTOR (31 downto 0);
        din159 : IN STD_LOGIC_VECTOR (31 downto 0);
        din160 : IN STD_LOGIC_VECTOR (31 downto 0);
        din161 : IN STD_LOGIC_VECTOR (31 downto 0);
        din162 : IN STD_LOGIC_VECTOR (31 downto 0);
        din163 : IN STD_LOGIC_VECTOR (31 downto 0);
        din164 : IN STD_LOGIC_VECTOR (31 downto 0);
        din165 : IN STD_LOGIC_VECTOR (31 downto 0);
        din166 : IN STD_LOGIC_VECTOR (31 downto 0);
        din167 : IN STD_LOGIC_VECTOR (31 downto 0);
        din168 : IN STD_LOGIC_VECTOR (31 downto 0);
        din169 : IN STD_LOGIC_VECTOR (31 downto 0);
        din170 : IN STD_LOGIC_VECTOR (31 downto 0);
        din171 : IN STD_LOGIC_VECTOR (31 downto 0);
        din172 : IN STD_LOGIC_VECTOR (31 downto 0);
        din173 : IN STD_LOGIC_VECTOR (31 downto 0);
        din174 : IN STD_LOGIC_VECTOR (31 downto 0);
        din175 : IN STD_LOGIC_VECTOR (31 downto 0);
        din176 : IN STD_LOGIC_VECTOR (31 downto 0);
        din177 : IN STD_LOGIC_VECTOR (31 downto 0);
        din178 : IN STD_LOGIC_VECTOR (31 downto 0);
        din179 : IN STD_LOGIC_VECTOR (31 downto 0);
        din180 : IN STD_LOGIC_VECTOR (31 downto 0);
        din181 : IN STD_LOGIC_VECTOR (31 downto 0);
        din182 : IN STD_LOGIC_VECTOR (31 downto 0);
        din183 : IN STD_LOGIC_VECTOR (31 downto 0);
        din184 : IN STD_LOGIC_VECTOR (31 downto 0);
        din185 : IN STD_LOGIC_VECTOR (31 downto 0);
        din186 : IN STD_LOGIC_VECTOR (31 downto 0);
        din187 : IN STD_LOGIC_VECTOR (31 downto 0);
        din188 : IN STD_LOGIC_VECTOR (31 downto 0);
        din189 : IN STD_LOGIC_VECTOR (31 downto 0);
        din190 : IN STD_LOGIC_VECTOR (31 downto 0);
        din191 : IN STD_LOGIC_VECTOR (31 downto 0);
        din192 : IN STD_LOGIC_VECTOR (31 downto 0);
        din193 : IN STD_LOGIC_VECTOR (31 downto 0);
        din194 : IN STD_LOGIC_VECTOR (31 downto 0);
        din195 : IN STD_LOGIC_VECTOR (31 downto 0);
        din196 : IN STD_LOGIC_VECTOR (31 downto 0);
        din197 : IN STD_LOGIC_VECTOR (31 downto 0);
        din198 : IN STD_LOGIC_VECTOR (31 downto 0);
        din199 : IN STD_LOGIC_VECTOR (31 downto 0);
        din200 : IN STD_LOGIC_VECTOR (31 downto 0);
        din201 : IN STD_LOGIC_VECTOR (31 downto 0);
        din202 : IN STD_LOGIC_VECTOR (31 downto 0);
        din203 : IN STD_LOGIC_VECTOR (31 downto 0);
        din204 : IN STD_LOGIC_VECTOR (31 downto 0);
        din205 : IN STD_LOGIC_VECTOR (31 downto 0);
        din206 : IN STD_LOGIC_VECTOR (31 downto 0);
        din207 : IN STD_LOGIC_VECTOR (31 downto 0);
        din208 : IN STD_LOGIC_VECTOR (31 downto 0);
        din209 : IN STD_LOGIC_VECTOR (31 downto 0);
        din210 : IN STD_LOGIC_VECTOR (31 downto 0);
        din211 : IN STD_LOGIC_VECTOR (31 downto 0);
        din212 : IN STD_LOGIC_VECTOR (31 downto 0);
        din213 : IN STD_LOGIC_VECTOR (31 downto 0);
        din214 : IN STD_LOGIC_VECTOR (31 downto 0);
        din215 : IN STD_LOGIC_VECTOR (31 downto 0);
        din216 : IN STD_LOGIC_VECTOR (31 downto 0);
        din217 : IN STD_LOGIC_VECTOR (31 downto 0);
        din218 : IN STD_LOGIC_VECTOR (31 downto 0);
        din219 : IN STD_LOGIC_VECTOR (31 downto 0);
        din220 : IN STD_LOGIC_VECTOR (31 downto 0);
        din221 : IN STD_LOGIC_VECTOR (31 downto 0);
        din222 : IN STD_LOGIC_VECTOR (31 downto 0);
        din223 : IN STD_LOGIC_VECTOR (31 downto 0);
        din224 : IN STD_LOGIC_VECTOR (31 downto 0);
        din225 : IN STD_LOGIC_VECTOR (31 downto 0);
        din226 : IN STD_LOGIC_VECTOR (31 downto 0);
        din227 : IN STD_LOGIC_VECTOR (31 downto 0);
        din228 : IN STD_LOGIC_VECTOR (31 downto 0);
        din229 : IN STD_LOGIC_VECTOR (31 downto 0);
        din230 : IN STD_LOGIC_VECTOR (31 downto 0);
        din231 : IN STD_LOGIC_VECTOR (31 downto 0);
        din232 : IN STD_LOGIC_VECTOR (31 downto 0);
        din233 : IN STD_LOGIC_VECTOR (31 downto 0);
        din234 : IN STD_LOGIC_VECTOR (31 downto 0);
        din235 : IN STD_LOGIC_VECTOR (31 downto 0);
        din236 : IN STD_LOGIC_VECTOR (31 downto 0);
        din237 : IN STD_LOGIC_VECTOR (31 downto 0);
        din238 : IN STD_LOGIC_VECTOR (31 downto 0);
        din239 : IN STD_LOGIC_VECTOR (31 downto 0);
        din240 : IN STD_LOGIC_VECTOR (31 downto 0);
        din241 : IN STD_LOGIC_VECTOR (31 downto 0);
        din242 : IN STD_LOGIC_VECTOR (31 downto 0);
        din243 : IN STD_LOGIC_VECTOR (31 downto 0);
        din244 : IN STD_LOGIC_VECTOR (31 downto 0);
        din245 : IN STD_LOGIC_VECTOR (31 downto 0);
        din246 : IN STD_LOGIC_VECTOR (31 downto 0);
        din247 : IN STD_LOGIC_VECTOR (31 downto 0);
        din248 : IN STD_LOGIC_VECTOR (31 downto 0);
        din249 : IN STD_LOGIC_VECTOR (31 downto 0);
        din250 : IN STD_LOGIC_VECTOR (31 downto 0);
        din251 : IN STD_LOGIC_VECTOR (31 downto 0);
        din252 : IN STD_LOGIC_VECTOR (31 downto 0);
        din253 : IN STD_LOGIC_VECTOR (31 downto 0);
        din254 : IN STD_LOGIC_VECTOR (31 downto 0);
        din255 : IN STD_LOGIC_VECTOR (31 downto 0);
        din256 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_dft_Pipeline_VITIS_LOOP_28_3_cos_coefficients_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_dft_Pipeline_VITIS_LOOP_28_3_sin_coefficients_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    cos_coefficients_table_U : component dft_dft_Pipeline_VITIS_LOOP_28_3_cos_coefficients_table_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_coefficients_table_address0,
        ce0 => cos_coefficients_table_ce0,
        q0 => cos_coefficients_table_q0);

    sin_coefficients_table_U : component dft_dft_Pipeline_VITIS_LOOP_28_3_sin_coefficients_table_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_coefficients_table_address0,
        ce0 => sin_coefficients_table_ce0,
        q0 => sin_coefficients_table_q0);

    fadd_32ns_32ns_32_5_full_dsp_1_U515 : component dft_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2158_p0,
        din1 => grp_fu_2158_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2158_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U516 : component dft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_2808,
        din1 => grp_fu_2162_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2162_p2);

    mux_2569_32_1_1_U517 : component dft_mux_2569_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 32,
        din65_WIDTH => 32,
        din66_WIDTH => 32,
        din67_WIDTH => 32,
        din68_WIDTH => 32,
        din69_WIDTH => 32,
        din70_WIDTH => 32,
        din71_WIDTH => 32,
        din72_WIDTH => 32,
        din73_WIDTH => 32,
        din74_WIDTH => 32,
        din75_WIDTH => 32,
        din76_WIDTH => 32,
        din77_WIDTH => 32,
        din78_WIDTH => 32,
        din79_WIDTH => 32,
        din80_WIDTH => 32,
        din81_WIDTH => 32,
        din82_WIDTH => 32,
        din83_WIDTH => 32,
        din84_WIDTH => 32,
        din85_WIDTH => 32,
        din86_WIDTH => 32,
        din87_WIDTH => 32,
        din88_WIDTH => 32,
        din89_WIDTH => 32,
        din90_WIDTH => 32,
        din91_WIDTH => 32,
        din92_WIDTH => 32,
        din93_WIDTH => 32,
        din94_WIDTH => 32,
        din95_WIDTH => 32,
        din96_WIDTH => 32,
        din97_WIDTH => 32,
        din98_WIDTH => 32,
        din99_WIDTH => 32,
        din100_WIDTH => 32,
        din101_WIDTH => 32,
        din102_WIDTH => 32,
        din103_WIDTH => 32,
        din104_WIDTH => 32,
        din105_WIDTH => 32,
        din106_WIDTH => 32,
        din107_WIDTH => 32,
        din108_WIDTH => 32,
        din109_WIDTH => 32,
        din110_WIDTH => 32,
        din111_WIDTH => 32,
        din112_WIDTH => 32,
        din113_WIDTH => 32,
        din114_WIDTH => 32,
        din115_WIDTH => 32,
        din116_WIDTH => 32,
        din117_WIDTH => 32,
        din118_WIDTH => 32,
        din119_WIDTH => 32,
        din120_WIDTH => 32,
        din121_WIDTH => 32,
        din122_WIDTH => 32,
        din123_WIDTH => 32,
        din124_WIDTH => 32,
        din125_WIDTH => 32,
        din126_WIDTH => 32,
        din127_WIDTH => 32,
        din128_WIDTH => 32,
        din129_WIDTH => 32,
        din130_WIDTH => 32,
        din131_WIDTH => 32,
        din132_WIDTH => 32,
        din133_WIDTH => 32,
        din134_WIDTH => 32,
        din135_WIDTH => 32,
        din136_WIDTH => 32,
        din137_WIDTH => 32,
        din138_WIDTH => 32,
        din139_WIDTH => 32,
        din140_WIDTH => 32,
        din141_WIDTH => 32,
        din142_WIDTH => 32,
        din143_WIDTH => 32,
        din144_WIDTH => 32,
        din145_WIDTH => 32,
        din146_WIDTH => 32,
        din147_WIDTH => 32,
        din148_WIDTH => 32,
        din149_WIDTH => 32,
        din150_WIDTH => 32,
        din151_WIDTH => 32,
        din152_WIDTH => 32,
        din153_WIDTH => 32,
        din154_WIDTH => 32,
        din155_WIDTH => 32,
        din156_WIDTH => 32,
        din157_WIDTH => 32,
        din158_WIDTH => 32,
        din159_WIDTH => 32,
        din160_WIDTH => 32,
        din161_WIDTH => 32,
        din162_WIDTH => 32,
        din163_WIDTH => 32,
        din164_WIDTH => 32,
        din165_WIDTH => 32,
        din166_WIDTH => 32,
        din167_WIDTH => 32,
        din168_WIDTH => 32,
        din169_WIDTH => 32,
        din170_WIDTH => 32,
        din171_WIDTH => 32,
        din172_WIDTH => 32,
        din173_WIDTH => 32,
        din174_WIDTH => 32,
        din175_WIDTH => 32,
        din176_WIDTH => 32,
        din177_WIDTH => 32,
        din178_WIDTH => 32,
        din179_WIDTH => 32,
        din180_WIDTH => 32,
        din181_WIDTH => 32,
        din182_WIDTH => 32,
        din183_WIDTH => 32,
        din184_WIDTH => 32,
        din185_WIDTH => 32,
        din186_WIDTH => 32,
        din187_WIDTH => 32,
        din188_WIDTH => 32,
        din189_WIDTH => 32,
        din190_WIDTH => 32,
        din191_WIDTH => 32,
        din192_WIDTH => 32,
        din193_WIDTH => 32,
        din194_WIDTH => 32,
        din195_WIDTH => 32,
        din196_WIDTH => 32,
        din197_WIDTH => 32,
        din198_WIDTH => 32,
        din199_WIDTH => 32,
        din200_WIDTH => 32,
        din201_WIDTH => 32,
        din202_WIDTH => 32,
        din203_WIDTH => 32,
        din204_WIDTH => 32,
        din205_WIDTH => 32,
        din206_WIDTH => 32,
        din207_WIDTH => 32,
        din208_WIDTH => 32,
        din209_WIDTH => 32,
        din210_WIDTH => 32,
        din211_WIDTH => 32,
        din212_WIDTH => 32,
        din213_WIDTH => 32,
        din214_WIDTH => 32,
        din215_WIDTH => 32,
        din216_WIDTH => 32,
        din217_WIDTH => 32,
        din218_WIDTH => 32,
        din219_WIDTH => 32,
        din220_WIDTH => 32,
        din221_WIDTH => 32,
        din222_WIDTH => 32,
        din223_WIDTH => 32,
        din224_WIDTH => 32,
        din225_WIDTH => 32,
        din226_WIDTH => 32,
        din227_WIDTH => 32,
        din228_WIDTH => 32,
        din229_WIDTH => 32,
        din230_WIDTH => 32,
        din231_WIDTH => 32,
        din232_WIDTH => 32,
        din233_WIDTH => 32,
        din234_WIDTH => 32,
        din235_WIDTH => 32,
        din236_WIDTH => 32,
        din237_WIDTH => 32,
        din238_WIDTH => 32,
        din239_WIDTH => 32,
        din240_WIDTH => 32,
        din241_WIDTH => 32,
        din242_WIDTH => 32,
        din243_WIDTH => 32,
        din244_WIDTH => 32,
        din245_WIDTH => 32,
        din246_WIDTH => 32,
        din247_WIDTH => 32,
        din248_WIDTH => 32,
        din249_WIDTH => 32,
        din250_WIDTH => 32,
        din251_WIDTH => 32,
        din252_WIDTH => 32,
        din253_WIDTH => 32,
        din254_WIDTH => 32,
        din255_WIDTH => 32,
        din256_WIDTH => 9,
        dout_WIDTH => 32)
    port map (
        din0 => temp_reload,
        din1 => temp_1_reload,
        din2 => temp_2_reload,
        din3 => temp_3_reload,
        din4 => temp_4_reload,
        din5 => temp_5_reload,
        din6 => temp_6_reload,
        din7 => temp_7_reload,
        din8 => temp_8_reload,
        din9 => temp_9_reload,
        din10 => temp_10_reload,
        din11 => temp_11_reload,
        din12 => temp_12_reload,
        din13 => temp_13_reload,
        din14 => temp_14_reload,
        din15 => temp_15_reload,
        din16 => temp_16_reload,
        din17 => temp_17_reload,
        din18 => temp_18_reload,
        din19 => temp_19_reload,
        din20 => temp_20_reload,
        din21 => temp_21_reload,
        din22 => temp_22_reload,
        din23 => temp_23_reload,
        din24 => temp_24_reload,
        din25 => temp_25_reload,
        din26 => temp_26_reload,
        din27 => temp_27_reload,
        din28 => temp_28_reload,
        din29 => temp_29_reload,
        din30 => temp_30_reload,
        din31 => temp_31_reload,
        din32 => temp_32_reload,
        din33 => temp_33_reload,
        din34 => temp_34_reload,
        din35 => temp_35_reload,
        din36 => temp_36_reload,
        din37 => temp_37_reload,
        din38 => temp_38_reload,
        din39 => temp_39_reload,
        din40 => temp_40_reload,
        din41 => temp_41_reload,
        din42 => temp_42_reload,
        din43 => temp_43_reload,
        din44 => temp_44_reload,
        din45 => temp_45_reload,
        din46 => temp_46_reload,
        din47 => temp_47_reload,
        din48 => temp_48_reload,
        din49 => temp_49_reload,
        din50 => temp_50_reload,
        din51 => temp_51_reload,
        din52 => temp_52_reload,
        din53 => temp_53_reload,
        din54 => temp_54_reload,
        din55 => temp_55_reload,
        din56 => temp_56_reload,
        din57 => temp_57_reload,
        din58 => temp_58_reload,
        din59 => temp_59_reload,
        din60 => temp_60_reload,
        din61 => temp_61_reload,
        din62 => temp_62_reload,
        din63 => temp_63_reload,
        din64 => temp_64_reload,
        din65 => temp_65_reload,
        din66 => temp_66_reload,
        din67 => temp_67_reload,
        din68 => temp_68_reload,
        din69 => temp_69_reload,
        din70 => temp_70_reload,
        din71 => temp_71_reload,
        din72 => temp_72_reload,
        din73 => temp_73_reload,
        din74 => temp_74_reload,
        din75 => temp_75_reload,
        din76 => temp_76_reload,
        din77 => temp_77_reload,
        din78 => temp_78_reload,
        din79 => temp_79_reload,
        din80 => temp_80_reload,
        din81 => temp_81_reload,
        din82 => temp_82_reload,
        din83 => temp_83_reload,
        din84 => temp_84_reload,
        din85 => temp_85_reload,
        din86 => temp_86_reload,
        din87 => temp_87_reload,
        din88 => temp_88_reload,
        din89 => temp_89_reload,
        din90 => temp_90_reload,
        din91 => temp_91_reload,
        din92 => temp_92_reload,
        din93 => temp_93_reload,
        din94 => temp_94_reload,
        din95 => temp_95_reload,
        din96 => temp_96_reload,
        din97 => temp_97_reload,
        din98 => temp_98_reload,
        din99 => temp_99_reload,
        din100 => temp_100_reload,
        din101 => temp_101_reload,
        din102 => temp_102_reload,
        din103 => temp_103_reload,
        din104 => temp_104_reload,
        din105 => temp_105_reload,
        din106 => temp_106_reload,
        din107 => temp_107_reload,
        din108 => temp_108_reload,
        din109 => temp_109_reload,
        din110 => temp_110_reload,
        din111 => temp_111_reload,
        din112 => temp_112_reload,
        din113 => temp_113_reload,
        din114 => temp_114_reload,
        din115 => temp_115_reload,
        din116 => temp_116_reload,
        din117 => temp_117_reload,
        din118 => temp_118_reload,
        din119 => temp_119_reload,
        din120 => temp_120_reload,
        din121 => temp_121_reload,
        din122 => temp_122_reload,
        din123 => temp_123_reload,
        din124 => temp_124_reload,
        din125 => temp_125_reload,
        din126 => temp_126_reload,
        din127 => temp_127_reload,
        din128 => temp_128_reload,
        din129 => temp_129_reload,
        din130 => temp_130_reload,
        din131 => temp_131_reload,
        din132 => temp_132_reload,
        din133 => temp_133_reload,
        din134 => temp_134_reload,
        din135 => temp_135_reload,
        din136 => temp_136_reload,
        din137 => temp_137_reload,
        din138 => temp_138_reload,
        din139 => temp_139_reload,
        din140 => temp_140_reload,
        din141 => temp_141_reload,
        din142 => temp_142_reload,
        din143 => temp_143_reload,
        din144 => temp_144_reload,
        din145 => temp_145_reload,
        din146 => temp_146_reload,
        din147 => temp_147_reload,
        din148 => temp_148_reload,
        din149 => temp_149_reload,
        din150 => temp_150_reload,
        din151 => temp_151_reload,
        din152 => temp_152_reload,
        din153 => temp_153_reload,
        din154 => temp_154_reload,
        din155 => temp_155_reload,
        din156 => temp_156_reload,
        din157 => temp_157_reload,
        din158 => temp_158_reload,
        din159 => temp_159_reload,
        din160 => temp_160_reload,
        din161 => temp_161_reload,
        din162 => temp_162_reload,
        din163 => temp_163_reload,
        din164 => temp_164_reload,
        din165 => temp_165_reload,
        din166 => temp_166_reload,
        din167 => temp_167_reload,
        din168 => temp_168_reload,
        din169 => temp_169_reload,
        din170 => temp_170_reload,
        din171 => temp_171_reload,
        din172 => temp_172_reload,
        din173 => temp_173_reload,
        din174 => temp_174_reload,
        din175 => temp_175_reload,
        din176 => temp_176_reload,
        din177 => temp_177_reload,
        din178 => temp_178_reload,
        din179 => temp_179_reload,
        din180 => temp_180_reload,
        din181 => temp_181_reload,
        din182 => temp_182_reload,
        din183 => temp_183_reload,
        din184 => temp_184_reload,
        din185 => temp_185_reload,
        din186 => temp_186_reload,
        din187 => temp_187_reload,
        din188 => temp_188_reload,
        din189 => temp_189_reload,
        din190 => temp_190_reload,
        din191 => temp_191_reload,
        din192 => temp_192_reload,
        din193 => temp_193_reload,
        din194 => temp_194_reload,
        din195 => temp_195_reload,
        din196 => temp_196_reload,
        din197 => temp_197_reload,
        din198 => temp_198_reload,
        din199 => temp_199_reload,
        din200 => temp_200_reload,
        din201 => temp_201_reload,
        din202 => temp_202_reload,
        din203 => temp_203_reload,
        din204 => temp_204_reload,
        din205 => temp_205_reload,
        din206 => temp_206_reload,
        din207 => temp_207_reload,
        din208 => temp_208_reload,
        din209 => temp_209_reload,
        din210 => temp_210_reload,
        din211 => temp_211_reload,
        din212 => temp_212_reload,
        din213 => temp_213_reload,
        din214 => temp_214_reload,
        din215 => temp_215_reload,
        din216 => temp_216_reload,
        din217 => temp_217_reload,
        din218 => temp_218_reload,
        din219 => temp_219_reload,
        din220 => temp_220_reload,
        din221 => temp_221_reload,
        din222 => temp_222_reload,
        din223 => temp_223_reload,
        din224 => temp_224_reload,
        din225 => temp_225_reload,
        din226 => temp_226_reload,
        din227 => temp_227_reload,
        din228 => temp_228_reload,
        din229 => temp_229_reload,
        din230 => temp_230_reload,
        din231 => temp_231_reload,
        din232 => temp_232_reload,
        din233 => temp_233_reload,
        din234 => temp_234_reload,
        din235 => temp_235_reload,
        din236 => temp_236_reload,
        din237 => temp_237_reload,
        din238 => temp_238_reload,
        din239 => temp_239_reload,
        din240 => temp_240_reload,
        din241 => temp_241_reload,
        din242 => temp_242_reload,
        din243 => temp_243_reload,
        din244 => temp_244_reload,
        din245 => temp_245_reload,
        din246 => temp_246_reload,
        din247 => temp_247_reload,
        din248 => temp_248_reload,
        din249 => temp_249_reload,
        din250 => temp_250_reload,
        din251 => temp_251_reload,
        din252 => temp_252_reload,
        din253 => temp_253_reload,
        din254 => temp_254_reload,
        din255 => temp_255_reload,
        din256 => ap_sig_allocacmp_n_1,
        dout => tmp_fu_2214_p258);

    flow_control_loop_pipe_sequential_init_U : component dft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    index_fu_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln28_fu_2193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    index_fu_560 <= add_ln31_fu_2208_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    index_fu_560 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    n_fu_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln28_fu_2193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n_fu_572 <= add_ln28_fu_2199_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_572 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    sum_i_fu_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                sum_i_fu_568 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                sum_i_fu_568 <= reg_2166;
            end if; 
        end if;
    end process;

    sum_r_fu_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                sum_r_fu_564 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                sum_r_fu_564 <= reg_2166;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2804 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                cos_coefficients_table_load_reg_2823 <= cos_coefficients_table_q0;
                sin_coefficients_table_load_reg_2828 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln28_reg_2804 <= icmp_ln28_fu_2193_p2;
                icmp_ln28_reg_2804_pp0_iter1_reg <= icmp_ln28_reg_2804;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul1_reg_2843 <= grp_fu_2162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_reg_2833 <= grp_fu_2162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_2166 <= grp_fu_2158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln28_fu_2193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_2808 <= tmp_fu_2214_p258;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter1_stage2, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln28_fu_2199_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_1) + unsigned(ap_const_lv9_1));
    add_ln31_fu_2208_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_index_load) + unsigned(trunc_ln1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, icmp_ln28_reg_2804)
    begin
        if (((icmp_ln28_reg_2804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage2_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln28_reg_2804_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (icmp_ln28_reg_2804_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_index_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, index_fu_560, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_index_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_index_load <= index_fu_560;
        end if; 
    end process;


    ap_sig_allocacmp_n_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, n_fu_572)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_1 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_1 <= n_fu_572;
        end if; 
    end process;


    ap_sig_allocacmp_sum_i_load_assign_proc : process(ap_enable_reg_pp0_iter2, reg_2166, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, sum_i_fu_568)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_sum_i_load <= reg_2166;
        else 
            ap_sig_allocacmp_sum_i_load <= sum_i_fu_568;
        end if; 
    end process;


    ap_sig_allocacmp_sum_r_load_assign_proc : process(ap_enable_reg_pp0_iter2, reg_2166, ap_CS_fsm_pp0_stage1, sum_r_fu_564, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_sum_r_load <= reg_2166;
        else 
            ap_sig_allocacmp_sum_r_load <= sum_r_fu_564;
        end if; 
    end process;

    cos_coefficients_table_address0 <= zext_ln32_fu_2732_p1(8 - 1 downto 0);

    cos_coefficients_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            cos_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2158_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_sig_allocacmp_sum_r_load, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_sig_allocacmp_sum_i_load)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_2158_p0 <= ap_sig_allocacmp_sum_i_load;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_2158_p0 <= ap_sig_allocacmp_sum_r_load;
            else 
                grp_fu_2158_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_2158_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2158_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, mul_reg_2833, mul1_reg_2843, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_2158_p1 <= mul1_reg_2843;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_2158_p1 <= mul_reg_2833;
            else 
                grp_fu_2158_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_2158_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2162_p1_assign_proc : process(ap_enable_reg_pp0_iter0, cos_coefficients_table_load_reg_2823, sin_coefficients_table_load_reg_2828, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_2162_p1 <= sin_coefficients_table_load_reg_2828;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_2162_p1 <= cos_coefficients_table_load_reg_2823;
            else 
                grp_fu_2162_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_2162_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln28_fu_2193_p2 <= "1" when (ap_sig_allocacmp_n_1 = ap_const_lv9_100) else "0";
    sin_coefficients_table_address0 <= zext_ln32_fu_2732_p1(8 - 1 downto 0);

    sin_coefficients_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            sin_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_i_out <= sum_i_fu_568;

    sum_i_out_ap_vld_assign_proc : process(icmp_ln28_reg_2804_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln28_reg_2804_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            sum_i_out_ap_vld <= ap_const_logic_1;
        else 
            sum_i_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sum_r_out <= sum_r_fu_564;

    sum_r_out_ap_vld_assign_proc : process(icmp_ln28_reg_2804_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln28_reg_2804_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            sum_r_out_ap_vld <= ap_const_logic_1;
        else 
            sum_r_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln32_fu_2732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_index_load),64));
end behav;
