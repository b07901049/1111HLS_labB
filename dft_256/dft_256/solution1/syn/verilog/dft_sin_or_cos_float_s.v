// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_sin_or_cos_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] t_in;
input  [0:0] do_cos;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_subdone;
wire   [3:0] ref_4oPi_table_100_V_address0;
reg    ref_4oPi_table_100_V_ce0;
wire   [99:0] ref_4oPi_table_100_V_q0;
wire   [7:0] second_order_float_sin_cos_K0_V_address0;
reg    second_order_float_sin_cos_K0_V_ce0;
wire   [29:0] second_order_float_sin_cos_K0_V_q0;
wire   [7:0] second_order_float_sin_cos_K1_V_address0;
reg    second_order_float_sin_cos_K1_V_ce0;
wire   [22:0] second_order_float_sin_cos_K1_V_q0;
wire   [7:0] second_order_float_sin_cos_K2_V_address0;
reg    second_order_float_sin_cos_K2_V_ce0;
wire  signed [14:0] second_order_float_sin_cos_K2_V_q0;
reg   [0:0] do_cos_read_reg_1138;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] do_cos_read_reg_1138_pp0_iter1_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter2_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter3_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter4_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter5_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter6_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter7_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter8_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter9_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter10_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter11_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter12_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter13_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter14_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter15_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter16_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter17_reg;
reg   [0:0] do_cos_read_reg_1138_pp0_iter18_reg;
reg   [0:0] p_Result_11_reg_1145;
reg   [0:0] p_Result_11_reg_1145_pp0_iter1_reg;
reg   [0:0] p_Result_11_reg_1145_pp0_iter2_reg;
reg   [0:0] p_Result_11_reg_1145_pp0_iter3_reg;
reg   [0:0] p_Result_11_reg_1145_pp0_iter4_reg;
reg   [0:0] p_Result_11_reg_1145_pp0_iter5_reg;
reg   [0:0] p_Result_11_reg_1145_pp0_iter6_reg;
wire   [7:0] din_exp_V_fu_252_p4;
reg   [7:0] din_exp_V_reg_1151;
reg   [7:0] din_exp_V_reg_1151_pp0_iter1_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter2_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter3_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter4_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter5_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter6_reg;
reg   [7:0] din_exp_V_reg_1151_pp0_iter7_reg;
wire   [0:0] closepath_fu_266_p2;
reg   [0:0] closepath_reg_1159;
reg   [0:0] closepath_reg_1159_pp0_iter1_reg;
reg   [0:0] closepath_reg_1159_pp0_iter2_reg;
reg   [0:0] closepath_reg_1159_pp0_iter3_reg;
reg   [0:0] closepath_reg_1159_pp0_iter4_reg;
reg   [0:0] closepath_reg_1159_pp0_iter5_reg;
reg   [0:0] closepath_reg_1159_pp0_iter6_reg;
reg   [0:0] closepath_reg_1159_pp0_iter7_reg;
wire   [22:0] p_Result_12_fu_272_p1;
reg   [22:0] p_Result_12_reg_1166;
reg   [22:0] p_Result_12_reg_1166_pp0_iter1_reg;
wire   [3:0] trunc_ln628_fu_305_p1;
reg   [3:0] trunc_ln628_reg_1176;
wire   [0:0] icmp_ln1019_fu_309_p2;
reg   [0:0] icmp_ln1019_reg_1181;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter1_reg;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_1181_pp0_iter6_reg;
reg  signed [79:0] Med_V_reg_1186;
wire   [79:0] grp_fu_345_p2;
reg   [79:0] ret_V_reg_1196;
reg   [57:0] Mx_bits_V_reg_1201;
reg   [2:0] k_V_reg_1207;
wire   [57:0] Mx_bits_V_3_fu_399_p3;
reg   [57:0] Mx_bits_V_3_reg_1212;
wire   [5:0] Mx_zeros_fu_454_p1;
reg   [5:0] Mx_zeros_reg_1217;
wire   [0:0] cos_basis_fu_486_p3;
reg   [0:0] cos_basis_reg_1223;
reg   [0:0] cos_basis_reg_1223_pp0_iter8_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter9_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter10_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter11_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter12_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter13_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter14_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter15_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter16_reg;
reg   [0:0] cos_basis_reg_1223_pp0_iter17_reg;
wire   [0:0] sin_basis_fu_498_p2;
reg   [0:0] sin_basis_reg_1229;
reg   [0:0] sin_basis_reg_1229_pp0_iter8_reg;
reg   [0:0] sin_basis_reg_1229_pp0_iter9_reg;
reg   [0:0] sin_basis_reg_1229_pp0_iter10_reg;
wire   [0:0] and_ln1019_fu_605_p2;
reg   [0:0] and_ln1019_reg_1234;
reg   [0:0] and_ln1019_reg_1234_pp0_iter8_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter9_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter10_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter11_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter12_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter13_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter14_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter15_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter16_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter17_reg;
reg   [0:0] and_ln1019_reg_1234_pp0_iter18_reg;
wire   [0:0] select_ln1019_fu_610_p3;
reg   [0:0] select_ln1019_reg_1240;
reg   [28:0] Mx_V_reg_1245;
reg   [28:0] Mx_V_reg_1245_pp0_iter9_reg;
reg   [28:0] Mx_V_reg_1245_pp0_iter10_reg;
reg   [28:0] Mx_V_reg_1245_pp0_iter11_reg;
reg   [28:0] Mx_V_reg_1245_pp0_iter12_reg;
reg   [28:0] Mx_V_reg_1245_pp0_iter13_reg;
reg   [28:0] Mx_V_reg_1245_pp0_iter14_reg;
wire  signed [7:0] Ex_V_3_fu_651_p2;
reg  signed [7:0] Ex_V_3_reg_1251;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter9_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter10_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter11_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter12_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter13_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter14_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter15_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter16_reg;
reg  signed [7:0] Ex_V_3_reg_1251_pp0_iter17_reg;
wire   [0:0] isNeg_fu_661_p3;
reg   [0:0] isNeg_reg_1256;
wire   [8:0] ush_fu_675_p3;
reg   [8:0] ush_reg_1261;
wire   [0:0] results_sign_V_3_fu_688_p2;
reg   [0:0] results_sign_V_3_reg_1266;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter9_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter10_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter11_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter12_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter13_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter14_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter15_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter16_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter17_reg;
reg   [0:0] results_sign_V_3_reg_1266_pp0_iter18_reg;
wire   [0:0] icmp_ln300_2_fu_693_p2;
reg   [0:0] icmp_ln300_2_reg_1271;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter9_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter10_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter11_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter12_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter13_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter14_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter15_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter16_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter17_reg;
reg   [0:0] icmp_ln300_2_reg_1271_pp0_iter18_reg;
wire   [21:0] B_fu_723_p1;
reg   [21:0] B_reg_1278;
reg   [21:0] B_reg_1278_pp0_iter10_reg;
reg   [21:0] B_reg_1278_pp0_iter11_reg;
reg   [21:0] B_reg_1278_pp0_iter12_reg;
reg   [6:0] tmp_1_reg_1283;
reg   [6:0] tmp_1_reg_1283_pp0_iter10_reg;
wire   [29:0] zext_ln1271_fu_747_p1;
reg   [28:0] t1_V_reg_1314;
reg   [28:0] t1_V_reg_1314_pp0_iter13_reg;
reg   [28:0] t1_V_reg_1314_pp0_iter14_reg;
reg  signed [22:0] second_order_float_sin_cos_K1_V_load_reg_1319;
reg   [21:0] rhs_1_reg_1329;
reg   [21:0] rhs_1_reg_1329_pp0_iter14_reg;
wire   [28:0] Mx_V_1_fu_813_p3;
reg   [28:0] Mx_V_1_reg_1334;
wire   [29:0] ret_V_2_fu_844_p2;
reg  signed [29:0] ret_V_2_reg_1339;
reg   [28:0] result_V_reg_1354;
reg   [15:0] tmp_3_reg_1360;
reg   [12:0] tmp_4_reg_1365;
reg   [31:0] tmp_6_1_fu_934_p3;
reg   [31:0] tmp_6_1_reg_1370;
wire   [31:0] shl_ln1454_2_fu_955_p2;
reg   [31:0] shl_ln1454_2_reg_1375;
wire   [0:0] icmp_ln321_fu_961_p2;
reg   [0:0] icmp_ln321_reg_1381;
wire   [31:0] newexp_fu_991_p2;
reg   [31:0] newexp_reg_1386;
wire   [0:0] or_ln335_fu_1010_p2;
reg   [0:0] or_ln335_reg_1391;
wire   [63:0] zext_ln541_1_fu_300_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln541_fu_757_p1;
wire   [31:0] data_V_fu_240_p1;
wire   [7:0] add_ln214_fu_276_p2;
wire   [7:0] addr_V_fu_282_p3;
wire   [3:0] r_V_fu_290_p4;
wire   [22:0] din_sig_V_fu_262_p1;
wire   [99:0] zext_ln930_fu_315_p1;
wire   [99:0] r_V_9_fu_318_p2;
wire   [23:0] p_Result_13_fu_334_p3;
wire   [23:0] grp_fu_345_p1;
wire   [0:0] tmp_fu_370_p3;
wire   [0:0] xor_ln1027_fu_383_p2;
wire   [0:0] p_Result_s_fu_388_p2;
wire   [57:0] Mx_bits_V_1_fu_394_p2;
wire   [28:0] tmp_2_fu_406_p4;
wire   [29:0] p_Result_14_fu_416_p3;
reg   [29:0] p_Result_2_fu_424_p4;
wire   [30:0] p_Result_15_fu_434_p3;
wire  signed [31:0] sext_ln1198_fu_442_p1;
reg   [31:0] val_assign_fu_446_p3;
wire   [2:0] k_V_1_fu_377_p3;
wire   [0:0] tmp_s_fu_458_p10;
wire   [0:0] xor_ln271_fu_480_p2;
wire   [0:0] xor_ln25_fu_493_p2;
wire   [3:0] p_Result_17_fu_504_p3;
wire   [0:0] tmp_7_fu_511_p18;
wire   [0:0] tmp_8_fu_549_p18;
wire   [0:0] icmp_ln300_fu_600_p2;
wire   [0:0] results_sign_V_2_fu_595_p2;
wire   [0:0] results_sign_V_fu_587_p3;
wire   [7:0] Ex_V_fu_618_p2;
wire   [57:0] zext_ln1454_fu_633_p1;
wire   [57:0] r_fu_636_p2;
wire   [7:0] select_ln482_fu_623_p3;
wire   [7:0] zext_ln841_fu_630_p1;
wire  signed [8:0] sext_ln1535_fu_657_p1;
wire   [8:0] sub_ln1512_fu_669_p2;
wire   [0:0] icmp_ln300_1_fu_683_p2;
wire   [31:0] zext_ln1488_fu_701_p1;
wire  signed [31:0] sext_ln1512_fu_698_p1;
wire   [31:0] lshr_ln1488_fu_704_p2;
wire   [31:0] shl_ln1454_fu_710_p2;
wire   [31:0] select_ln1513_fu_716_p3;
wire   [14:0] B_trunc_fu_737_p4;
wire   [7:0] p_Result_16_fu_751_p3;
wire   [29:0] B_squared_fu_764_p1;
wire  signed [29:0] grp_fu_1124_p2;
wire   [14:0] B_squared_fu_764_p4;
wire   [21:0] r_V_4_fu_797_p1;
wire   [44:0] r_V_4_fu_797_p2;
wire  signed [29:0] grp_fu_1131_p2;
wire  signed [29:0] sext_ln813_fu_828_p1;
wire  signed [29:0] sext_ln813_1_fu_831_p1;
wire   [13:0] rhs_2_fu_819_p4;
wire   [29:0] ret_V_1_fu_834_p2;
wire  signed [29:0] sext_ln1347_fu_840_p1;
wire   [28:0] grp_fu_856_p1;
wire   [57:0] grp_fu_856_p2;
wire   [31:0] p_Result_6_fu_892_p3;
reg   [31:0] p_Result_s_26_fu_906_p4;
wire   [31:0] p_Result_7_fu_899_p3;
reg   [31:0] p_Result_32_1_fu_924_p4;
wire   [7:0] Ex_V_4_fu_942_p3;
wire   [31:0] zext_ln1488_1_fu_952_p1;
reg   [31:0] tmp_6_fu_916_p3;
wire   [31:0] add_ln319_fu_967_p2;
wire  signed [8:0] sext_ln186_fu_948_p1;
wire   [8:0] add_ln329_fu_981_p2;
wire  signed [31:0] sext_ln329_fu_987_p1;
wire   [31:0] select_ln321_fu_973_p3;
wire   [0:0] tmp_11_fu_997_p3;
wire   [0:0] icmp_ln1653_fu_1005_p2;
wire   [27:0] trunc_ln1513_fu_1016_p1;
wire   [31:0] zext_ln1488_2_fu_1019_p1;
wire   [31:0] shl_ln1454_3_fu_1023_p2;
wire   [22:0] tmp_9_fu_1028_p4;
wire   [22:0] tmp_5_fu_1038_p4;
wire   [7:0] empty_fu_1054_p1;
wire   [7:0] select_ln288_fu_1064_p3;
wire   [7:0] out_exp_V_fu_1057_p3;
wire   [7:0] select_ln1019_1_fu_1071_p3;
wire   [22:0] select_ln321_1_fu_1047_p3;
wire   [0:0] or_ln300_fu_1092_p2;
wire   [22:0] select_ln300_2_fu_1085_p3;
wire   [22:0] select_ln300_1_fu_1096_p3;
wire   [7:0] results_exp_V_fu_1078_p3;
wire   [22:0] results_sig_V_fu_1103_p3;
wire   [31:0] p_Result_18_fu_1111_p4;
wire   [14:0] grp_fu_1124_p0;
wire   [14:0] grp_fu_1124_p1;
wire   [14:0] grp_fu_1131_p0;
reg    grp_fu_345_ce;
reg    grp_fu_856_ce;
reg    grp_fu_1124_ce;
reg    grp_fu_1131_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to18;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [29:0] grp_fu_1131_p00;
wire   [79:0] grp_fu_345_p10;
wire   [57:0] grp_fu_856_p10;
wire   [44:0] r_V_4_fu_797_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

dft_sin_or_cos_float_s_ref_4oPi_table_100_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_V_address0),
    .ce0(ref_4oPi_table_100_V_ce0),
    .q0(ref_4oPi_table_100_V_q0)
);

dft_sin_or_cos_float_s_second_order_float_sin_cos_K0_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_sin_cos_K0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_cos_K0_V_address0),
    .ce0(second_order_float_sin_cos_K0_V_ce0),
    .q0(second_order_float_sin_cos_K0_V_q0)
);

dft_sin_or_cos_float_s_second_order_float_sin_cos_K1_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_sin_cos_K1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_cos_K1_V_address0),
    .ce0(second_order_float_sin_cos_K1_V_ce0),
    .q0(second_order_float_sin_cos_K1_V_q0)
);

dft_sin_or_cos_float_s_second_order_float_sin_cos_K2_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 15 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_sin_cos_K2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_cos_K2_V_address0),
    .ce0(second_order_float_sin_cos_K2_V_ce0),
    .q0(second_order_float_sin_cos_K2_V_q0)
);

dft_mul_80s_24ns_80_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 80 ))
mul_80s_24ns_80_5_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Med_V_reg_1186),
    .din1(grp_fu_345_p1),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

dft_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U6(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(k_V_1_fu_377_p3),
    .dout(tmp_s_fu_458_p10)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U7(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_504_p3),
    .dout(tmp_7_fu_511_p18)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U8(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_504_p3),
    .dout(tmp_8_fu_549_p18)
);

dft_mul_23s_22ns_45_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 45 ))
mul_23s_22ns_45_1_1_U9(
    .din0(second_order_float_sin_cos_K1_V_load_reg_1319),
    .din1(r_V_4_fu_797_p1),
    .dout(r_V_4_fu_797_p2)
);

dft_mul_30s_29ns_58_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 58 ))
mul_30s_29ns_58_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_2_reg_1339),
    .din1(grp_fu_856_p1),
    .ce(grp_fu_856_ce),
    .dout(grp_fu_856_p2)
);

dft_mul_mul_15ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_15ns_15ns_30_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1124_p0),
    .din1(grp_fu_1124_p1),
    .ce(grp_fu_1124_ce),
    .dout(grp_fu_1124_p2)
);

dft_mul_mul_15ns_15s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_15ns_15s_30_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1131_p0),
    .din1(second_order_float_sin_cos_K2_V_q0),
    .ce(grp_fu_1131_ce),
    .dout(grp_fu_1131_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_reg_1278 <= B_fu_723_p1;
        B_reg_1278_pp0_iter10_reg <= B_reg_1278;
        B_reg_1278_pp0_iter11_reg <= B_reg_1278_pp0_iter10_reg;
        B_reg_1278_pp0_iter12_reg <= B_reg_1278_pp0_iter11_reg;
        Ex_V_3_reg_1251 <= Ex_V_3_fu_651_p2;
        Ex_V_3_reg_1251_pp0_iter10_reg <= Ex_V_3_reg_1251_pp0_iter9_reg;
        Ex_V_3_reg_1251_pp0_iter11_reg <= Ex_V_3_reg_1251_pp0_iter10_reg;
        Ex_V_3_reg_1251_pp0_iter12_reg <= Ex_V_3_reg_1251_pp0_iter11_reg;
        Ex_V_3_reg_1251_pp0_iter13_reg <= Ex_V_3_reg_1251_pp0_iter12_reg;
        Ex_V_3_reg_1251_pp0_iter14_reg <= Ex_V_3_reg_1251_pp0_iter13_reg;
        Ex_V_3_reg_1251_pp0_iter15_reg <= Ex_V_3_reg_1251_pp0_iter14_reg;
        Ex_V_3_reg_1251_pp0_iter16_reg <= Ex_V_3_reg_1251_pp0_iter15_reg;
        Ex_V_3_reg_1251_pp0_iter17_reg <= Ex_V_3_reg_1251_pp0_iter16_reg;
        Ex_V_3_reg_1251_pp0_iter9_reg <= Ex_V_3_reg_1251;
        Mx_V_1_reg_1334 <= Mx_V_1_fu_813_p3;
        Mx_V_reg_1245 <= {{r_fu_636_p2[57:29]}};
        Mx_V_reg_1245_pp0_iter10_reg <= Mx_V_reg_1245_pp0_iter9_reg;
        Mx_V_reg_1245_pp0_iter11_reg <= Mx_V_reg_1245_pp0_iter10_reg;
        Mx_V_reg_1245_pp0_iter12_reg <= Mx_V_reg_1245_pp0_iter11_reg;
        Mx_V_reg_1245_pp0_iter13_reg <= Mx_V_reg_1245_pp0_iter12_reg;
        Mx_V_reg_1245_pp0_iter14_reg <= Mx_V_reg_1245_pp0_iter13_reg;
        Mx_V_reg_1245_pp0_iter9_reg <= Mx_V_reg_1245;
        Mx_bits_V_3_reg_1212 <= Mx_bits_V_3_fu_399_p3;
        Mx_bits_V_reg_1201 <= {{grp_fu_345_p2[76:19]}};
        Mx_zeros_reg_1217 <= Mx_zeros_fu_454_p1;
        and_ln1019_reg_1234 <= and_ln1019_fu_605_p2;
        and_ln1019_reg_1234_pp0_iter10_reg <= and_ln1019_reg_1234_pp0_iter9_reg;
        and_ln1019_reg_1234_pp0_iter11_reg <= and_ln1019_reg_1234_pp0_iter10_reg;
        and_ln1019_reg_1234_pp0_iter12_reg <= and_ln1019_reg_1234_pp0_iter11_reg;
        and_ln1019_reg_1234_pp0_iter13_reg <= and_ln1019_reg_1234_pp0_iter12_reg;
        and_ln1019_reg_1234_pp0_iter14_reg <= and_ln1019_reg_1234_pp0_iter13_reg;
        and_ln1019_reg_1234_pp0_iter15_reg <= and_ln1019_reg_1234_pp0_iter14_reg;
        and_ln1019_reg_1234_pp0_iter16_reg <= and_ln1019_reg_1234_pp0_iter15_reg;
        and_ln1019_reg_1234_pp0_iter17_reg <= and_ln1019_reg_1234_pp0_iter16_reg;
        and_ln1019_reg_1234_pp0_iter18_reg <= and_ln1019_reg_1234_pp0_iter17_reg;
        and_ln1019_reg_1234_pp0_iter8_reg <= and_ln1019_reg_1234;
        and_ln1019_reg_1234_pp0_iter9_reg <= and_ln1019_reg_1234_pp0_iter8_reg;
        closepath_reg_1159_pp0_iter2_reg <= closepath_reg_1159_pp0_iter1_reg;
        closepath_reg_1159_pp0_iter3_reg <= closepath_reg_1159_pp0_iter2_reg;
        closepath_reg_1159_pp0_iter4_reg <= closepath_reg_1159_pp0_iter3_reg;
        closepath_reg_1159_pp0_iter5_reg <= closepath_reg_1159_pp0_iter4_reg;
        closepath_reg_1159_pp0_iter6_reg <= closepath_reg_1159_pp0_iter5_reg;
        closepath_reg_1159_pp0_iter7_reg <= closepath_reg_1159_pp0_iter6_reg;
        cos_basis_reg_1223 <= cos_basis_fu_486_p3;
        cos_basis_reg_1223_pp0_iter10_reg <= cos_basis_reg_1223_pp0_iter9_reg;
        cos_basis_reg_1223_pp0_iter11_reg <= cos_basis_reg_1223_pp0_iter10_reg;
        cos_basis_reg_1223_pp0_iter12_reg <= cos_basis_reg_1223_pp0_iter11_reg;
        cos_basis_reg_1223_pp0_iter13_reg <= cos_basis_reg_1223_pp0_iter12_reg;
        cos_basis_reg_1223_pp0_iter14_reg <= cos_basis_reg_1223_pp0_iter13_reg;
        cos_basis_reg_1223_pp0_iter15_reg <= cos_basis_reg_1223_pp0_iter14_reg;
        cos_basis_reg_1223_pp0_iter16_reg <= cos_basis_reg_1223_pp0_iter15_reg;
        cos_basis_reg_1223_pp0_iter17_reg <= cos_basis_reg_1223_pp0_iter16_reg;
        cos_basis_reg_1223_pp0_iter8_reg <= cos_basis_reg_1223;
        cos_basis_reg_1223_pp0_iter9_reg <= cos_basis_reg_1223_pp0_iter8_reg;
        din_exp_V_reg_1151_pp0_iter2_reg <= din_exp_V_reg_1151_pp0_iter1_reg;
        din_exp_V_reg_1151_pp0_iter3_reg <= din_exp_V_reg_1151_pp0_iter2_reg;
        din_exp_V_reg_1151_pp0_iter4_reg <= din_exp_V_reg_1151_pp0_iter3_reg;
        din_exp_V_reg_1151_pp0_iter5_reg <= din_exp_V_reg_1151_pp0_iter4_reg;
        din_exp_V_reg_1151_pp0_iter6_reg <= din_exp_V_reg_1151_pp0_iter5_reg;
        din_exp_V_reg_1151_pp0_iter7_reg <= din_exp_V_reg_1151_pp0_iter6_reg;
        do_cos_read_reg_1138_pp0_iter10_reg <= do_cos_read_reg_1138_pp0_iter9_reg;
        do_cos_read_reg_1138_pp0_iter11_reg <= do_cos_read_reg_1138_pp0_iter10_reg;
        do_cos_read_reg_1138_pp0_iter12_reg <= do_cos_read_reg_1138_pp0_iter11_reg;
        do_cos_read_reg_1138_pp0_iter13_reg <= do_cos_read_reg_1138_pp0_iter12_reg;
        do_cos_read_reg_1138_pp0_iter14_reg <= do_cos_read_reg_1138_pp0_iter13_reg;
        do_cos_read_reg_1138_pp0_iter15_reg <= do_cos_read_reg_1138_pp0_iter14_reg;
        do_cos_read_reg_1138_pp0_iter16_reg <= do_cos_read_reg_1138_pp0_iter15_reg;
        do_cos_read_reg_1138_pp0_iter17_reg <= do_cos_read_reg_1138_pp0_iter16_reg;
        do_cos_read_reg_1138_pp0_iter18_reg <= do_cos_read_reg_1138_pp0_iter17_reg;
        do_cos_read_reg_1138_pp0_iter2_reg <= do_cos_read_reg_1138_pp0_iter1_reg;
        do_cos_read_reg_1138_pp0_iter3_reg <= do_cos_read_reg_1138_pp0_iter2_reg;
        do_cos_read_reg_1138_pp0_iter4_reg <= do_cos_read_reg_1138_pp0_iter3_reg;
        do_cos_read_reg_1138_pp0_iter5_reg <= do_cos_read_reg_1138_pp0_iter4_reg;
        do_cos_read_reg_1138_pp0_iter6_reg <= do_cos_read_reg_1138_pp0_iter5_reg;
        do_cos_read_reg_1138_pp0_iter7_reg <= do_cos_read_reg_1138_pp0_iter6_reg;
        do_cos_read_reg_1138_pp0_iter8_reg <= do_cos_read_reg_1138_pp0_iter7_reg;
        do_cos_read_reg_1138_pp0_iter9_reg <= do_cos_read_reg_1138_pp0_iter8_reg;
        icmp_ln1019_reg_1181_pp0_iter2_reg <= icmp_ln1019_reg_1181_pp0_iter1_reg;
        icmp_ln1019_reg_1181_pp0_iter3_reg <= icmp_ln1019_reg_1181_pp0_iter2_reg;
        icmp_ln1019_reg_1181_pp0_iter4_reg <= icmp_ln1019_reg_1181_pp0_iter3_reg;
        icmp_ln1019_reg_1181_pp0_iter5_reg <= icmp_ln1019_reg_1181_pp0_iter4_reg;
        icmp_ln1019_reg_1181_pp0_iter6_reg <= icmp_ln1019_reg_1181_pp0_iter5_reg;
        icmp_ln300_2_reg_1271 <= icmp_ln300_2_fu_693_p2;
        icmp_ln300_2_reg_1271_pp0_iter10_reg <= icmp_ln300_2_reg_1271_pp0_iter9_reg;
        icmp_ln300_2_reg_1271_pp0_iter11_reg <= icmp_ln300_2_reg_1271_pp0_iter10_reg;
        icmp_ln300_2_reg_1271_pp0_iter12_reg <= icmp_ln300_2_reg_1271_pp0_iter11_reg;
        icmp_ln300_2_reg_1271_pp0_iter13_reg <= icmp_ln300_2_reg_1271_pp0_iter12_reg;
        icmp_ln300_2_reg_1271_pp0_iter14_reg <= icmp_ln300_2_reg_1271_pp0_iter13_reg;
        icmp_ln300_2_reg_1271_pp0_iter15_reg <= icmp_ln300_2_reg_1271_pp0_iter14_reg;
        icmp_ln300_2_reg_1271_pp0_iter16_reg <= icmp_ln300_2_reg_1271_pp0_iter15_reg;
        icmp_ln300_2_reg_1271_pp0_iter17_reg <= icmp_ln300_2_reg_1271_pp0_iter16_reg;
        icmp_ln300_2_reg_1271_pp0_iter18_reg <= icmp_ln300_2_reg_1271_pp0_iter17_reg;
        icmp_ln300_2_reg_1271_pp0_iter9_reg <= icmp_ln300_2_reg_1271;
        icmp_ln321_reg_1381 <= icmp_ln321_fu_961_p2;
        isNeg_reg_1256 <= Ex_V_3_fu_651_p2[32'd7];
        newexp_reg_1386 <= newexp_fu_991_p2;
        or_ln335_reg_1391 <= or_ln335_fu_1010_p2;
        p_Result_11_reg_1145_pp0_iter2_reg <= p_Result_11_reg_1145_pp0_iter1_reg;
        p_Result_11_reg_1145_pp0_iter3_reg <= p_Result_11_reg_1145_pp0_iter2_reg;
        p_Result_11_reg_1145_pp0_iter4_reg <= p_Result_11_reg_1145_pp0_iter3_reg;
        p_Result_11_reg_1145_pp0_iter5_reg <= p_Result_11_reg_1145_pp0_iter4_reg;
        p_Result_11_reg_1145_pp0_iter6_reg <= p_Result_11_reg_1145_pp0_iter5_reg;
        result_V_reg_1354 <= {{grp_fu_856_p2[57:29]}};
        results_sign_V_3_reg_1266 <= results_sign_V_3_fu_688_p2;
        results_sign_V_3_reg_1266_pp0_iter10_reg <= results_sign_V_3_reg_1266_pp0_iter9_reg;
        results_sign_V_3_reg_1266_pp0_iter11_reg <= results_sign_V_3_reg_1266_pp0_iter10_reg;
        results_sign_V_3_reg_1266_pp0_iter12_reg <= results_sign_V_3_reg_1266_pp0_iter11_reg;
        results_sign_V_3_reg_1266_pp0_iter13_reg <= results_sign_V_3_reg_1266_pp0_iter12_reg;
        results_sign_V_3_reg_1266_pp0_iter14_reg <= results_sign_V_3_reg_1266_pp0_iter13_reg;
        results_sign_V_3_reg_1266_pp0_iter15_reg <= results_sign_V_3_reg_1266_pp0_iter14_reg;
        results_sign_V_3_reg_1266_pp0_iter16_reg <= results_sign_V_3_reg_1266_pp0_iter15_reg;
        results_sign_V_3_reg_1266_pp0_iter17_reg <= results_sign_V_3_reg_1266_pp0_iter16_reg;
        results_sign_V_3_reg_1266_pp0_iter18_reg <= results_sign_V_3_reg_1266_pp0_iter17_reg;
        results_sign_V_3_reg_1266_pp0_iter9_reg <= results_sign_V_3_reg_1266;
        ret_V_2_reg_1339 <= ret_V_2_fu_844_p2;
        ret_V_reg_1196 <= grp_fu_345_p2;
        rhs_1_reg_1329 <= {{r_V_4_fu_797_p2[44:23]}};
        rhs_1_reg_1329_pp0_iter14_reg <= rhs_1_reg_1329;
        second_order_float_sin_cos_K1_V_load_reg_1319 <= second_order_float_sin_cos_K1_V_q0;
        select_ln1019_reg_1240 <= select_ln1019_fu_610_p3;
        shl_ln1454_2_reg_1375 <= shl_ln1454_2_fu_955_p2;
        sin_basis_reg_1229 <= sin_basis_fu_498_p2;
        sin_basis_reg_1229_pp0_iter10_reg <= sin_basis_reg_1229_pp0_iter9_reg;
        sin_basis_reg_1229_pp0_iter8_reg <= sin_basis_reg_1229;
        sin_basis_reg_1229_pp0_iter9_reg <= sin_basis_reg_1229_pp0_iter8_reg;
        t1_V_reg_1314 <= {{second_order_float_sin_cos_K0_V_q0[29:1]}};
        t1_V_reg_1314_pp0_iter13_reg <= t1_V_reg_1314;
        t1_V_reg_1314_pp0_iter14_reg <= t1_V_reg_1314_pp0_iter13_reg;
        tmp_1_reg_1283 <= {{select_ln1513_fu_716_p3[28:22]}};
        tmp_1_reg_1283_pp0_iter10_reg <= tmp_1_reg_1283;
        tmp_3_reg_1360 <= {{grp_fu_856_p2[57:42]}};
        tmp_4_reg_1365 <= {{grp_fu_856_p2[41:29]}};
        tmp_6_1_reg_1370 <= tmp_6_1_fu_934_p3;
        ush_reg_1261 <= ush_fu_675_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Med_V_reg_1186 <= {{r_V_9_fu_318_p2[99:20]}};
        closepath_reg_1159 <= closepath_fu_266_p2;
        closepath_reg_1159_pp0_iter1_reg <= closepath_reg_1159;
        din_exp_V_reg_1151 <= {{data_V_fu_240_p1[30:23]}};
        din_exp_V_reg_1151_pp0_iter1_reg <= din_exp_V_reg_1151;
        do_cos_read_reg_1138 <= do_cos;
        do_cos_read_reg_1138_pp0_iter1_reg <= do_cos_read_reg_1138;
        icmp_ln1019_reg_1181 <= icmp_ln1019_fu_309_p2;
        icmp_ln1019_reg_1181_pp0_iter1_reg <= icmp_ln1019_reg_1181;
        p_Result_11_reg_1145 <= data_V_fu_240_p1[32'd31];
        p_Result_11_reg_1145_pp0_iter1_reg <= p_Result_11_reg_1145;
        p_Result_12_reg_1166 <= p_Result_12_fu_272_p1;
        p_Result_12_reg_1166_pp0_iter1_reg <= p_Result_12_reg_1166;
        trunc_ln628_reg_1176 <= trunc_ln628_fu_305_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (closepath_reg_1159_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_V_reg_1207 <= {{grp_fu_345_p2[79:77]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to18 = 1'b1;
    end else begin
        ap_idle_pp0_0to18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to18 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1124_ce = 1'b1;
    end else begin
        grp_fu_1124_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1131_ce = 1'b1;
    end else begin
        grp_fu_1131_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_856_ce = 1'b1;
    end else begin
        grp_fu_856_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ref_4oPi_table_100_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_100_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_cos_K0_V_ce0 = 1'b1;
    end else begin
        second_order_float_sin_cos_K0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_cos_K1_V_ce0 = 1'b1;
    end else begin
        second_order_float_sin_cos_K1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_cos_K2_V_ce0 = 1'b1;
    end else begin
        second_order_float_sin_cos_K2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_723_p1 = select_ln1513_fu_716_p3[21:0];

assign B_squared_fu_764_p1 = grp_fu_1124_p2;

assign B_squared_fu_764_p4 = {{B_squared_fu_764_p1[29:15]}};

assign B_trunc_fu_737_p4 = {{select_ln1513_fu_716_p3[21:7]}};

assign Ex_V_3_fu_651_p2 = (select_ln482_fu_623_p3 - zext_ln841_fu_630_p1);

assign Ex_V_4_fu_942_p3 = ((cos_basis_reg_1223_pp0_iter17_reg[0:0] == 1'b1) ? 8'd0 : Ex_V_3_reg_1251_pp0_iter17_reg);

assign Ex_V_fu_618_p2 = ($signed(din_exp_V_reg_1151_pp0_iter7_reg) + $signed(8'd131));

assign Mx_V_1_fu_813_p3 = ((cos_basis_reg_1223_pp0_iter14_reg[0:0] == 1'b1) ? 29'd536870911 : Mx_V_reg_1245_pp0_iter14_reg);

assign Mx_bits_V_1_fu_394_p2 = (58'd0 - Mx_bits_V_reg_1201);

assign Mx_bits_V_3_fu_399_p3 = ((p_Result_s_fu_388_p2[0:0] == 1'b1) ? Mx_bits_V_1_fu_394_p2 : Mx_bits_V_reg_1201);

assign Mx_zeros_fu_454_p1 = val_assign_fu_446_p3[5:0];

assign add_ln214_fu_276_p2 = ($signed(din_exp_V_fu_252_p4) + $signed(8'd194));

assign add_ln319_fu_967_p2 = (tmp_6_1_fu_934_p3 + 32'd16);

assign add_ln329_fu_981_p2 = ($signed(sext_ln186_fu_948_p1) + $signed(9'd127));

assign addr_V_fu_282_p3 = ((closepath_fu_266_p2[0:0] == 1'b1) ? 8'd63 : add_ln214_fu_276_p2);

assign and_ln1019_fu_605_p2 = (icmp_ln300_fu_600_p2 & icmp_ln1019_reg_1181_pp0_iter6_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_18_fu_1111_p4;

assign closepath_fu_266_p2 = ((din_exp_V_fu_252_p4 < 8'd126) ? 1'b1 : 1'b0);

assign cos_basis_fu_486_p3 = ((do_cos_read_reg_1138_pp0_iter6_reg[0:0] == 1'b1) ? xor_ln271_fu_480_p2 : tmp_s_fu_458_p10);

assign data_V_fu_240_p1 = t_in;

assign din_exp_V_fu_252_p4 = {{data_V_fu_240_p1[30:23]}};

assign din_sig_V_fu_262_p1 = data_V_fu_240_p1[22:0];

assign empty_fu_1054_p1 = newexp_reg_1386[7:0];

assign grp_fu_1124_p0 = zext_ln1271_fu_747_p1;

assign grp_fu_1124_p1 = zext_ln1271_fu_747_p1;

assign grp_fu_1131_p0 = grp_fu_1131_p00;

assign grp_fu_1131_p00 = B_squared_fu_764_p4;

assign grp_fu_345_p1 = grp_fu_345_p10;

assign grp_fu_345_p10 = p_Result_13_fu_334_p3;

assign grp_fu_856_p1 = grp_fu_856_p10;

assign grp_fu_856_p10 = Mx_V_1_reg_1334;

assign icmp_ln1019_fu_309_p2 = ((din_sig_V_fu_262_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_1005_p2 = ((result_V_reg_1354 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln300_1_fu_683_p2 = ((din_exp_V_reg_1151_pp0_iter7_reg != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln300_2_fu_693_p2 = ((din_exp_V_reg_1151_pp0_iter7_reg == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_600_p2 = ((din_exp_V_reg_1151_pp0_iter6_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_961_p2 = ((tmp_6_fu_916_p3 == 32'd16) ? 1'b1 : 1'b0);

assign isNeg_fu_661_p3 = Ex_V_3_fu_651_p2[32'd7];

assign k_V_1_fu_377_p3 = ((closepath_reg_1159_pp0_iter6_reg[0:0] == 1'b1) ? 3'd0 : k_V_reg_1207);

assign lshr_ln1488_fu_704_p2 = zext_ln1488_fu_701_p1 >> sext_ln1512_fu_698_p1;

assign newexp_fu_991_p2 = ($signed(sext_ln329_fu_987_p1) - $signed(select_ln321_fu_973_p3));

assign or_ln300_fu_1092_p2 = (icmp_ln300_2_reg_1271_pp0_iter18_reg | and_ln1019_reg_1234_pp0_iter18_reg);

assign or_ln335_fu_1010_p2 = (tmp_11_fu_997_p3 | icmp_ln1653_fu_1005_p2);

assign out_exp_V_fu_1057_p3 = ((or_ln335_reg_1391[0:0] == 1'b1) ? 8'd0 : empty_fu_1054_p1);

assign p_Result_12_fu_272_p1 = data_V_fu_240_p1[22:0];

assign p_Result_13_fu_334_p3 = {{1'd1}, {p_Result_12_reg_1166_pp0_iter1_reg}};

assign p_Result_14_fu_416_p3 = {{tmp_2_fu_406_p4}, {1'd1}};

assign p_Result_15_fu_434_p3 = {{1'd1}, {p_Result_2_fu_424_p4}};

assign p_Result_16_fu_751_p3 = {{sin_basis_reg_1229_pp0_iter10_reg}, {tmp_1_reg_1283_pp0_iter10_reg}};

assign p_Result_17_fu_504_p3 = {{p_Result_11_reg_1145_pp0_iter6_reg}, {k_V_1_fu_377_p3}};

assign p_Result_18_fu_1111_p4 = {{{results_sign_V_3_reg_1266_pp0_iter18_reg}, {results_exp_V_fu_1078_p3}}, {results_sig_V_fu_1103_p3}};

integer ap_tvar_int_0;

always @ (p_Result_14_fu_416_p3) begin
    for (ap_tvar_int_0 = 30 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 29 - 0) begin
            p_Result_2_fu_424_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_2_fu_424_p4[ap_tvar_int_0] = p_Result_14_fu_416_p3[29 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Result_7_fu_899_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_32_1_fu_924_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_32_1_fu_924_p4[ap_tvar_int_1] = p_Result_7_fu_899_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_6_fu_892_p3 = {{tmp_3_reg_1360}, {16'd32768}};

assign p_Result_7_fu_899_p3 = {{tmp_4_reg_1365}, {19'd262144}};

integer ap_tvar_int_2;

always @ (p_Result_6_fu_892_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_s_26_fu_906_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_s_26_fu_906_p4[ap_tvar_int_2] = p_Result_6_fu_892_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_s_fu_388_p2 = (xor_ln1027_fu_383_p2 & tmp_fu_370_p3);

assign r_V_4_fu_797_p1 = r_V_4_fu_797_p10;

assign r_V_4_fu_797_p10 = B_reg_1278_pp0_iter12_reg;

assign r_V_9_fu_318_p2 = ref_4oPi_table_100_V_q0 << zext_ln930_fu_315_p1;

assign r_V_fu_290_p4 = {{addr_V_fu_282_p3[7:4]}};

assign r_fu_636_p2 = Mx_bits_V_3_reg_1212 << zext_ln1454_fu_633_p1;

assign ref_4oPi_table_100_V_address0 = zext_ln541_1_fu_300_p1;

assign results_exp_V_fu_1078_p3 = ((icmp_ln300_2_reg_1271_pp0_iter18_reg[0:0] == 1'b1) ? 8'd255 : select_ln1019_1_fu_1071_p3);

assign results_sig_V_fu_1103_p3 = ((or_ln300_fu_1092_p2[0:0] == 1'b1) ? select_ln300_2_fu_1085_p3 : select_ln300_1_fu_1096_p3);

assign results_sign_V_2_fu_595_p2 = (xor_ln25_fu_493_p2 & p_Result_11_reg_1145_pp0_iter6_reg);

assign results_sign_V_3_fu_688_p2 = (select_ln1019_reg_1240 & icmp_ln300_1_fu_683_p2);

assign results_sign_V_fu_587_p3 = ((cos_basis_fu_486_p3[0:0] == 1'b1) ? tmp_7_fu_511_p18 : tmp_8_fu_549_p18);

assign ret_V_1_fu_834_p2 = ($signed(sext_ln813_fu_828_p1) + $signed(sext_ln813_1_fu_831_p1));

assign ret_V_2_fu_844_p2 = ($signed(ret_V_1_fu_834_p2) + $signed(sext_ln1347_fu_840_p1));

assign rhs_2_fu_819_p4 = {{grp_fu_1131_p2[29:16]}};

assign second_order_float_sin_cos_K0_V_address0 = zext_ln541_fu_757_p1;

assign second_order_float_sin_cos_K1_V_address0 = zext_ln541_fu_757_p1;

assign second_order_float_sin_cos_K2_V_address0 = zext_ln541_fu_757_p1;

assign select_ln1019_1_fu_1071_p3 = ((and_ln1019_reg_1234_pp0_iter18_reg[0:0] == 1'b1) ? select_ln288_fu_1064_p3 : out_exp_V_fu_1057_p3);

assign select_ln1019_fu_610_p3 = ((and_ln1019_fu_605_p2[0:0] == 1'b1) ? results_sign_V_2_fu_595_p2 : results_sign_V_fu_587_p3);

assign select_ln1513_fu_716_p3 = ((isNeg_reg_1256[0:0] == 1'b1) ? lshr_ln1488_fu_704_p2 : shl_ln1454_fu_710_p2);

assign select_ln288_fu_1064_p3 = ((do_cos_read_reg_1138_pp0_iter18_reg[0:0] == 1'b1) ? 8'd127 : 8'd0);

assign select_ln300_1_fu_1096_p3 = ((or_ln335_reg_1391[0:0] == 1'b1) ? 23'd0 : select_ln321_1_fu_1047_p3);

assign select_ln300_2_fu_1085_p3 = ((icmp_ln300_2_reg_1271_pp0_iter18_reg[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign select_ln321_1_fu_1047_p3 = ((icmp_ln321_reg_1381[0:0] == 1'b1) ? tmp_9_fu_1028_p4 : tmp_5_fu_1038_p4);

assign select_ln321_fu_973_p3 = ((icmp_ln321_fu_961_p2[0:0] == 1'b1) ? add_ln319_fu_967_p2 : tmp_6_fu_916_p3);

assign select_ln482_fu_623_p3 = ((closepath_reg_1159_pp0_iter7_reg[0:0] == 1'b1) ? Ex_V_fu_618_p2 : 8'd0);

assign sext_ln1198_fu_442_p1 = $signed(p_Result_15_fu_434_p3);

assign sext_ln1347_fu_840_p1 = $signed(rhs_2_fu_819_p4);

assign sext_ln1512_fu_698_p1 = $signed(ush_reg_1261);

assign sext_ln1535_fu_657_p1 = Ex_V_3_fu_651_p2;

assign sext_ln186_fu_948_p1 = $signed(Ex_V_4_fu_942_p3);

assign sext_ln329_fu_987_p1 = $signed(add_ln329_fu_981_p2);

assign sext_ln813_1_fu_831_p1 = $signed(rhs_1_reg_1329_pp0_iter14_reg);

assign sext_ln813_fu_828_p1 = $signed(t1_V_reg_1314_pp0_iter14_reg);

assign shl_ln1454_2_fu_955_p2 = zext_ln1488_1_fu_952_p1 << tmp_6_fu_916_p3;

assign shl_ln1454_3_fu_1023_p2 = zext_ln1488_2_fu_1019_p1 << tmp_6_1_reg_1370;

assign shl_ln1454_fu_710_p2 = zext_ln1488_fu_701_p1 << sext_ln1512_fu_698_p1;

assign sin_basis_fu_498_p2 = (xor_ln25_fu_493_p2 ^ tmp_s_fu_458_p10);

assign sub_ln1512_fu_669_p2 = ($signed(9'd0) - $signed(sext_ln1535_fu_657_p1));

assign tmp_11_fu_997_p3 = newexp_fu_991_p2[32'd31];

assign tmp_2_fu_406_p4 = {{Mx_bits_V_3_fu_399_p3[57:29]}};

assign tmp_5_fu_1038_p4 = {{shl_ln1454_2_reg_1375[27:5]}};


always @ (p_Result_32_1_fu_924_p4) begin
    if (p_Result_32_1_fu_924_p4[0] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd0;
    end else if (p_Result_32_1_fu_924_p4[1] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd1;
    end else if (p_Result_32_1_fu_924_p4[2] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd2;
    end else if (p_Result_32_1_fu_924_p4[3] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd3;
    end else if (p_Result_32_1_fu_924_p4[4] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd4;
    end else if (p_Result_32_1_fu_924_p4[5] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd5;
    end else if (p_Result_32_1_fu_924_p4[6] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd6;
    end else if (p_Result_32_1_fu_924_p4[7] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd7;
    end else if (p_Result_32_1_fu_924_p4[8] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd8;
    end else if (p_Result_32_1_fu_924_p4[9] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd9;
    end else if (p_Result_32_1_fu_924_p4[10] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd10;
    end else if (p_Result_32_1_fu_924_p4[11] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd11;
    end else if (p_Result_32_1_fu_924_p4[12] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd12;
    end else if (p_Result_32_1_fu_924_p4[13] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd13;
    end else if (p_Result_32_1_fu_924_p4[14] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd14;
    end else if (p_Result_32_1_fu_924_p4[15] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd15;
    end else if (p_Result_32_1_fu_924_p4[16] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd16;
    end else if (p_Result_32_1_fu_924_p4[17] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd17;
    end else if (p_Result_32_1_fu_924_p4[18] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd18;
    end else if (p_Result_32_1_fu_924_p4[19] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd19;
    end else if (p_Result_32_1_fu_924_p4[20] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd20;
    end else if (p_Result_32_1_fu_924_p4[21] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd21;
    end else if (p_Result_32_1_fu_924_p4[22] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd22;
    end else if (p_Result_32_1_fu_924_p4[23] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd23;
    end else if (p_Result_32_1_fu_924_p4[24] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd24;
    end else if (p_Result_32_1_fu_924_p4[25] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd25;
    end else if (p_Result_32_1_fu_924_p4[26] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd26;
    end else if (p_Result_32_1_fu_924_p4[27] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd27;
    end else if (p_Result_32_1_fu_924_p4[28] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd28;
    end else if (p_Result_32_1_fu_924_p4[29] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd29;
    end else if (p_Result_32_1_fu_924_p4[30] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd30;
    end else if (p_Result_32_1_fu_924_p4[31] == 1'b1) begin
        tmp_6_1_fu_934_p3 = 32'd31;
    end else begin
        tmp_6_1_fu_934_p3 = 32'd32;
    end
end


always @ (p_Result_s_26_fu_906_p4) begin
    if (p_Result_s_26_fu_906_p4[0] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd0;
    end else if (p_Result_s_26_fu_906_p4[1] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd1;
    end else if (p_Result_s_26_fu_906_p4[2] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd2;
    end else if (p_Result_s_26_fu_906_p4[3] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd3;
    end else if (p_Result_s_26_fu_906_p4[4] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd4;
    end else if (p_Result_s_26_fu_906_p4[5] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd5;
    end else if (p_Result_s_26_fu_906_p4[6] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd6;
    end else if (p_Result_s_26_fu_906_p4[7] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd7;
    end else if (p_Result_s_26_fu_906_p4[8] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd8;
    end else if (p_Result_s_26_fu_906_p4[9] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd9;
    end else if (p_Result_s_26_fu_906_p4[10] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd10;
    end else if (p_Result_s_26_fu_906_p4[11] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd11;
    end else if (p_Result_s_26_fu_906_p4[12] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd12;
    end else if (p_Result_s_26_fu_906_p4[13] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd13;
    end else if (p_Result_s_26_fu_906_p4[14] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd14;
    end else if (p_Result_s_26_fu_906_p4[15] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd15;
    end else if (p_Result_s_26_fu_906_p4[16] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd16;
    end else if (p_Result_s_26_fu_906_p4[17] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd17;
    end else if (p_Result_s_26_fu_906_p4[18] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd18;
    end else if (p_Result_s_26_fu_906_p4[19] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd19;
    end else if (p_Result_s_26_fu_906_p4[20] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd20;
    end else if (p_Result_s_26_fu_906_p4[21] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd21;
    end else if (p_Result_s_26_fu_906_p4[22] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd22;
    end else if (p_Result_s_26_fu_906_p4[23] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd23;
    end else if (p_Result_s_26_fu_906_p4[24] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd24;
    end else if (p_Result_s_26_fu_906_p4[25] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd25;
    end else if (p_Result_s_26_fu_906_p4[26] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd26;
    end else if (p_Result_s_26_fu_906_p4[27] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd27;
    end else if (p_Result_s_26_fu_906_p4[28] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd28;
    end else if (p_Result_s_26_fu_906_p4[29] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd29;
    end else if (p_Result_s_26_fu_906_p4[30] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd30;
    end else if (p_Result_s_26_fu_906_p4[31] == 1'b1) begin
        tmp_6_fu_916_p3 = 32'd31;
    end else begin
        tmp_6_fu_916_p3 = 32'd32;
    end
end

assign tmp_9_fu_1028_p4 = {{shl_ln1454_3_fu_1023_p2[27:5]}};

assign tmp_fu_370_p3 = ret_V_reg_1196[32'd77];

assign trunc_ln1513_fu_1016_p1 = shl_ln1454_2_reg_1375[27:0];

assign trunc_ln628_fu_305_p1 = addr_V_fu_282_p3[3:0];

assign ush_fu_675_p3 = ((isNeg_fu_661_p3[0:0] == 1'b1) ? sub_ln1512_fu_669_p2 : sext_ln1535_fu_657_p1);


always @ (sext_ln1198_fu_442_p1) begin
    if (sext_ln1198_fu_442_p1[0] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd0;
    end else if (sext_ln1198_fu_442_p1[1] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd1;
    end else if (sext_ln1198_fu_442_p1[2] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd2;
    end else if (sext_ln1198_fu_442_p1[3] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd3;
    end else if (sext_ln1198_fu_442_p1[4] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd4;
    end else if (sext_ln1198_fu_442_p1[5] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd5;
    end else if (sext_ln1198_fu_442_p1[6] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd6;
    end else if (sext_ln1198_fu_442_p1[7] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd7;
    end else if (sext_ln1198_fu_442_p1[8] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd8;
    end else if (sext_ln1198_fu_442_p1[9] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd9;
    end else if (sext_ln1198_fu_442_p1[10] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd10;
    end else if (sext_ln1198_fu_442_p1[11] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd11;
    end else if (sext_ln1198_fu_442_p1[12] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd12;
    end else if (sext_ln1198_fu_442_p1[13] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd13;
    end else if (sext_ln1198_fu_442_p1[14] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd14;
    end else if (sext_ln1198_fu_442_p1[15] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd15;
    end else if (sext_ln1198_fu_442_p1[16] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd16;
    end else if (sext_ln1198_fu_442_p1[17] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd17;
    end else if (sext_ln1198_fu_442_p1[18] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd18;
    end else if (sext_ln1198_fu_442_p1[19] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd19;
    end else if (sext_ln1198_fu_442_p1[20] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd20;
    end else if (sext_ln1198_fu_442_p1[21] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd21;
    end else if (sext_ln1198_fu_442_p1[22] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd22;
    end else if (sext_ln1198_fu_442_p1[23] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd23;
    end else if (sext_ln1198_fu_442_p1[24] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd24;
    end else if (sext_ln1198_fu_442_p1[25] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd25;
    end else if (sext_ln1198_fu_442_p1[26] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd26;
    end else if (sext_ln1198_fu_442_p1[27] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd27;
    end else if (sext_ln1198_fu_442_p1[28] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd28;
    end else if (sext_ln1198_fu_442_p1[29] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd29;
    end else if (sext_ln1198_fu_442_p1[30] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd30;
    end else if (sext_ln1198_fu_442_p1[31] == 1'b1) begin
        val_assign_fu_446_p3 = 32'd31;
    end else begin
        val_assign_fu_446_p3 = 32'd32;
    end
end

assign xor_ln1027_fu_383_p2 = (closepath_reg_1159_pp0_iter6_reg ^ 1'd1);

assign xor_ln25_fu_493_p2 = (do_cos_read_reg_1138_pp0_iter6_reg ^ 1'd1);

assign xor_ln271_fu_480_p2 = (tmp_s_fu_458_p10 ^ 1'd1);

assign zext_ln1271_fu_747_p1 = B_trunc_fu_737_p4;

assign zext_ln1454_fu_633_p1 = Mx_zeros_reg_1217;

assign zext_ln1488_1_fu_952_p1 = result_V_reg_1354;

assign zext_ln1488_2_fu_1019_p1 = trunc_ln1513_fu_1016_p1;

assign zext_ln1488_fu_701_p1 = Mx_V_reg_1245;

assign zext_ln541_1_fu_300_p1 = r_V_fu_290_p4;

assign zext_ln541_fu_757_p1 = p_Result_16_fu_751_p3;

assign zext_ln841_fu_630_p1 = Mx_zeros_reg_1217;

assign zext_ln930_fu_315_p1 = trunc_ln628_reg_1176;

endmodule //dft_sin_or_cos_float_s
